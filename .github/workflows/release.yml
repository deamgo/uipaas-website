on:
  push:
    tags:
      - "v*.*.*"
name: Release
jobs:
  build:
    name: docekr pkg
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: node version
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      - run: node -v

      - name: Install Golang
        uses: actions/setup-go@v4.1.0
        with:
          go-version: '^1.21.4'
          cache: false
      - run: go version

      - name: Install front Dep & build
        working-directory: ./front
        run: |
          yarn
          yarn build
      
      - name: Install admin Dep & build
        working-directory: ./admin
        run: |
          yarn
          yarn build

      - name: Backend build
        working-directory: ./backend
        run: |
          go build -o ../docker/apps/backend -ldflags '-linkmode=external -extldflags "-static"' main.go
    # CGO_ENABLE=0 GOOS=linux GOARCH=arm64 go build -o ../docker/apps/backend -ldflags '-linkmode=external -extldflags "-static"'
    # go build -o ../docker/apps/backend -ldflags '-linkmode=external -extldflags "-static"' main.go
    # CGO_ENABLE=0 GOOS=linux GOARCH=amd64 go build -o ../docker/apps/backend -ldflags '-linkmode=external -extldflags "-static"'
    # CGO_ENABLE=0 GOOS=linux GOARCH=arm64 go build -o ../docker/apps/backend -ldflags '-linkmode=external -extldflags "-static"'
    
      - name: zip Docker pkg
        working-directory: ./
        run: |
          zip -r uihome-${{ github.ref_name }}.zip ./docker

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: uihome-${{ github.ref_name }}.zip
          path: ./uihome-${{ github.ref_name }}.zip
  release:
    name: Release artifacts
    needs: [build]
    runs-on: ubuntu-latest
    environment:
      name: uihome_deploy
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4 

      - name: Download artifacts
        uses: actions/download-artifact@v3
      
      - name: Publish release
        uses: softprops/action-gh-release@v1
        with:
          name: "Release ${{ github.ref_name }}"
          generate_release_notes: true
          files: |
            **/uihome-*
      
      - name: Deploy
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          port: ${{ secrets.PORT }}
          script: |
            rm -f uihome*.zip
            wget https://github.com/${{ github.repository }}/releases/download/${{ github.ref_name }}/uihome-${{ github.ref_name }}.zip
            unzip uihome-${{ github.ref_name }}.zip
            cd ./docker
            docker stop uipaashome-uipaas uipaashome-mysql
            docker rm uipaashome-uipaas uipaashome-mysql
            docker rmi uihome
            docker-compose up --build -d
          

