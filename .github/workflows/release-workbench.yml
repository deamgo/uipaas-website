on:
  push:
    branches:
      - '1226/feat-developer'
name: Release
jobs:
  build:
    name: docekr pkg
    runs-on: ubuntu-22.04
    environment:
      name: workbench_deploy
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: node version
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      - run: node -v

      - name: Install Golang
        uses: actions/setup-go@v4.1.0
        with:
          go-version: '^1.21.4'
          cache: false
      - run: go version

      - name: Install front Dep & build
        working-directory: ./apps/workbench/front
        run: |
          yarn
          yarn build

      - name: Backend build
        working-directory: ./apps/workbench/backend/cmd
        run: |
          CGO_ENABLE=0 GOOS=linux GOARCH=amd64 go build -o ../docker/apps/backend
    
      - name: zip Docker pkg
        working-directory: ./apps/workbench
        run: |
          zip -r workbench.zip ./docker
          
      - uses: actions/upload-artifact@v3
        with:
          name: workbench
          path: ./apps/workbench/workbench.zip

      - uses: actions/download-artifact@v2
        with:
          name: workbench
          path: distfiles

      - name: SCP Files 
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.REMOTE_HOST }}  # Secrets中的配置：vps IP地址
          username: ${{ secrets.REMOTE_USER }}  # Secrets中的配置：vps 登录用户名
          key: ${{ secrets.SERVER_SSH_KEY }} # Secrets中的配置：vps 上创建的ssh key的私钥内容
          source: distfiles/*  # 打包的文件
          target: /deamgo/workbench # Secrets中的配置：scp 到 vps 上的的目录
    
  release:
    name: Release artifacts
    needs: [build]
    runs-on: ubuntu-latest
    environment:
      name: workbench_deploy
    steps:
      - name: Deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.REMOTE_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |  
            docker stop workbench-uipaas workbench-mysql
            docker rm workbench-uipaas workbench-mysql
            docker rmi workbench
            cd /deamgo/workbench/distfiles
            pwd
            rm -rf ./docker
            unzip ./workbench.zip
            cd ./docker
            docker-compose up --build -d
            rm -f workbench.zip
